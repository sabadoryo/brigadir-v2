import {
  ChannelType,
  ChatInputCommandInteraction,
  Collection,
} from 'discord.js'
import activeCWs from '../../storage/active-cws'

async function handleEndCW(interaction: ChatInputCommandInteraction) {
  await interaction.deferReply({ ephemeral: false })
  const cwName = interaction.options.getString('cwname', true)
  const guild = interaction.guild

  if (!guild)
    return interaction.editReply({
      content: '–û—à–∏–±–∫–∞: –≥–∏–ª—å–¥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.',
    })

  const category = guild.channels.cache.find(
    (channel) =>
      channel.type === ChannelType.GuildCategory &&
      channel.name === `${cwName}`,
  )

  if (!category) return interaction.editReply({ content: 'CW –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.' })

  const cwsborChannel = guild.channels.cache.find(
    (channel) =>
      channel.type === ChannelType.GuildVoice &&
      channel.name === 'üéÆ-Creativity Room',
  )
  // console.log(cwsborChannel)
  if (!cwsborChannel)
    return interaction.editReply({
      content: '–û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª "üéÆ-Creativity Room" –Ω–µ –Ω–∞–π–¥–µ–Ω.',
    })

  try {
    const voiceChannels = guild.channels.cache.filter(
      (channel) =>
        channel.type === ChannelType.GuildVoice &&
        channel.parentId === category.id,
    )
    if (cwsborChannel?.type === ChannelType.GuildVoice) {
      for (const voiceChannel of voiceChannels.values()) {
        console.log('voiceChannel', voiceChannel.members)
        if (voiceChannel.members instanceof Collection) {
          for (const member of voiceChannel.members.values()) {
            console.log('member', member)
            await member.voice.setChannel(cwsborChannel).catch(console.error)
          }
        }
      }
    } else {
      console.error('–û—à–∏–±–∫–∞: cwsborChannel –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º.')
    }

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for (const [, channel] of voiceChannels) {
      await channel.delete().catch(console.error)
    }

    await category.delete().catch(console.error)

    activeCWs.delete(cwName)

    await interaction.editReply({
      content: `CW "${cwName}" –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∫–∞–Ω–∞–ª—ã —É–¥–∞–ª–µ–Ω—ã.`,
    })
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ CW:', error)
    await interaction.editReply({
      content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ CW.',
    })
  }
}

export { handleEndCW }
